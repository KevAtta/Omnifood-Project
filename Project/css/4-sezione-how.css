/******************************************/
/* SECTION-HOW */
/******************************************/
.step-img {
  width: 40%;
}

/* ricordarsi che per centrare un oggetto solo come questo */
/* è possibile usare il flexbox e poi centrarlo */
.step-img-box {
  display: flex;
  align-items: center;
  justify-content: center;

  position: relative;
}

/* questo serve per una cosa opzionale nella sezione how */
/* va ad inserire un cerchio colorato dietro alle immagini dei telefoni */
/* questo è completamente facoltativo e non obbligatario */
.step-img-box::before {
  content: "";
  /* vogliamo dare una forma a questo componente quindi è necessario */
  /* che sia un elemento 'blocco' */
  display: block;

  /* si usa la percentuale qui in modo tale che anche questo componente */
  /* si adatti ogni qual volta l'utente restringe la finestra del browser */
  width: 60%;
  /* l'uso del padding in questo modo + del width alla stessa percentuale */
  /* permette di creare un quadrato. Farlo con height non avrebbe funzionato.*/
  /* questo funziona perchè il padding in basso è definita sulla larghezza */
  /* dell'elemento. Il 60% qui in basso sta per il 60% della larghezza */
  /* dell'elemento genitore (in questo caso la cella grid) */
  padding-bottom: 60%;
  background-color: #fdf2e9;
  border-radius: 50%;

  /* sarebbe stato sbagliato usare il flex perchè quello che si vuole */
  /* è che sia esattamente al centro come la foto del telefono */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  /* si usa la proprietà chiamata indice z che permette di far passare */
  /* il cerchio sotto l'immagine dei telefoni */
  /* quello che dice è che più il valore dell'indice sarà alto più avrà */
  /* la priorità e quindi apparità prima. Indi per cui abbassandolo */
  /* la perderà e quindi il cerchio passerà dietro all'immaigne, */
  /* in quanto perderà valore */
  z-index: -2;
}

.step-img-box::after {
  content: "";

  display: block;

  /* questo è un'altro modo per scrivere quel che abbiamo scritto prima */
  padding-right: 50%;

  padding-bottom: 50%;
  background-color: #fae5d3;
  border-radius: 50%;

  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  z-index: -1;
}

.section-how {
  padding: 9.6rem 0;
}

.subheading {
  /* mettiamo block perchè span è un elemento in-line */
  /* per come è costruito il layout abbiamo quindi bisogno  */
  /* di un elemento che sia un blocco */
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 0.75px;
}

.heading-secondary {
  font-weight: 800;
  color: #333;
  letter-spacing: -0.5px;

  font-size: 4.4rem;
  line-height: 1.2;

  margin-bottom: 9.6rem;
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;

  margin-bottom: 1.2rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}
